{"version":3,"sources":["components/icongallery/IconGallery.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["IconGallery","iconSets","push","name","iconNames","Object","keys","GenesysDevIcons","filter","key","startsWith","className","map","iconSet","Fragment","iconName","icon","type","onClick","navigator","clipboard","writeText","AppCopy","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAKe,SAASA,IACvB,IAAMC,EAAW,GAcjB,OAbAA,EAASC,KAAK,CACbC,KAAM,oBACNC,UAAWC,OAAOC,KAAKC,mBAAiBC,QAAO,SAACC,GAAD,OAASA,EAAIC,WAAW,YAExET,EAASC,KAAK,CACbC,KAAM,oBACNC,UAAWC,OAAOC,KAAKC,mBAAiBC,QAAO,SAACC,GAAD,OAASA,EAAIC,WAAW,aAExET,EAASC,KAAK,CACbC,KAAM,iCACNC,UAAWC,OAAOC,KAAKC,mBAAiBC,QAAO,SAACC,GAAD,OAASA,EAAIC,WAAW,WAIvE,qBAAKC,UAAU,eAAf,SACEV,EAASW,KAAI,SAACC,GAAD,OACb,eAAC,IAAMC,SAAP,WACC,6BAAKD,EAAQV,OACb,qBAAKQ,UAAU,WAAf,SACEE,EAAQT,UAAUQ,KAAI,SAACG,GAAD,OACtB,sBAAoBJ,UAAU,iBAA9B,UACC,cAAC,iBAAD,CAAgBK,KAAMT,kBAAgBQ,KACtC,+BAAOR,kBAAgBQ,KACvB,yBACCE,KAAK,SACLN,UAAU,wBACVO,QAAS,kBAAMC,UAAUC,UAAUC,UAApB,gDAAuEN,EAAvE,UAHhB,UAKC,cAAC,iBAAD,CAAgBC,KAAMT,kBAAgBe,UALvC,iBAOA,yBACCL,KAAK,SACLN,UAAU,wBACVO,QAAS,kBAAMC,UAAUC,UAAUC,UAApB,yBAAgDd,kBAAgBQ,GAAhE,YAHhB,UAKC,cAAC,iBAAD,CAAgBC,KAAMT,kBAAgBe,UALvC,kBAVSP,UAJQF,EAAQV,WCPlBoB,MAXf,WACC,OACC,qBAAKZ,UAAU,MAAf,SACC,sBAAKA,UAAU,cAAf,UACC,uDACA,cAAC,EAAD,UCIWa,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4fe696d4.chunk.js","sourcesContent":["import React from 'react';\nimport { GenesysDevIcon, GenesysDevIcons, GenesysDevIconsKey } from 'genesys-dev-icons';\n\nimport './IconGallery.scss';\n\nexport default function IconGallery() {\n\tconst iconSets = [];\n\ticonSets.push({\n\t\tname: 'Application Icons',\n\t\ticonNames: Object.keys(GenesysDevIcons).filter((key) => key.startsWith('App')) as GenesysDevIconsKey[],\n\t});\n\ticonSets.push({\n\t\tname: 'Destination Icons',\n\t\ticonNames: Object.keys(GenesysDevIcons).filter((key) => key.startsWith('Dest')) as GenesysDevIconsKey[],\n\t});\n\ticonSets.push({\n\t\tname: 'Information Architecture Icons',\n\t\ticonNames: Object.keys(GenesysDevIcons).filter((key) => key.startsWith('Ia')) as GenesysDevIconsKey[],\n\t});\n\n\treturn (\n\t\t<div className=\"icon-gallery\">\n\t\t\t{iconSets.map((iconSet) => (\n\t\t\t\t<React.Fragment key={iconSet.name}>\n\t\t\t\t\t<h2>{iconSet.name}</h2>\n\t\t\t\t\t<div className=\"icon-set\">\n\t\t\t\t\t\t{iconSet.iconNames.map((iconName) => (\n\t\t\t\t\t\t\t<div key={iconName} className=\"icon-container\">\n\t\t\t\t\t\t\t\t<GenesysDevIcon icon={GenesysDevIcons[iconName]} />\n\t\t\t\t\t\t\t\t<span>{GenesysDevIcons[iconName]}</span>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tclassName=\"button button-primary\"\n\t\t\t\t\t\t\t\t\tonClick={() => navigator.clipboard.writeText(`<GenesysDevIcon icon={GenesysDevIcons.${iconName}} />`)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<GenesysDevIcon icon={GenesysDevIcons.AppCopy} /> Copy React\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tclassName=\"button button-primary\"\n\t\t\t\t\t\t\t\t\tonClick={() => navigator.clipboard.writeText(`<i class=\"icon ${GenesysDevIcons[iconName]}\"></i>`)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<GenesysDevIcon icon={GenesysDevIcons.AppCopy} /> Copy HTML\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</React.Fragment>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport './App.scss';\nimport './typography.scss';\nimport IconGallery from './components/icongallery/IconGallery';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<div className=\"app-content\">\n\t\t\t\t<h1>Genesys Dev Icon Pack</h1>\n\t\t\t\t<IconGallery />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}